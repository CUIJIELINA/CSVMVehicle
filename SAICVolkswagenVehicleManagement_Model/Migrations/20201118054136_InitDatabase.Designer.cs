// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SAICVolkswagenVehicleManagement_Model;

namespace SAICVolkswagenVehicleManagement_Model.Migrations
{
    [DbContext(typeof(Base_DbContext))]
    [Migration("20201118054136_InitDatabase")]
    partial class InitDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SAICVolkswagenVehicleManagement_Model.CarBrandInfo", b =>
                {
                    b.Property<int>("CarBrandID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CarBrandCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarBrandDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarBrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CarBrandID");

                    b.ToTable("CarBrandInfo");
                });

            modelBuilder.Entity("SAICVolkswagenVehicleManagement_Model.CarInfo", b =>
                {
                    b.Property<int>("CarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CarBrandID")
                        .HasColumnType("int");

                    b.Property<string>("CarCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EquipmentID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IsUse")
                        .HasColumnType("int");

                    b.Property<string>("PersonLiable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CarID");

                    b.ToTable("CarInfo");
                });

            modelBuilder.Entity("SAICVolkswagenVehicleManagement_Model.DepartmentInfo", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpID")
                        .HasColumnType("int");

                    b.HasKey("DepartmentID");

                    b.ToTable("DepartmentInfo");
                });

            modelBuilder.Entity("SAICVolkswagenVehicleManagement_Model.DriverInfo", b =>
                {
                    b.Property<int>("DriverID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int>("CarID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DriverSex")
                        .HasColumnType("int");

                    b.Property<int>("DriverState")
                        .HasColumnType("int");

                    b.Property<int>("DriverType")
                        .HasColumnType("int");

                    b.Property<string>("IDNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsState")
                        .HasColumnType("int");

                    b.Property<int>("QuasiDriving")
                        .HasColumnType("int");

                    b.HasKey("DriverID");

                    b.ToTable("DriverInfo");
                });

            modelBuilder.Entity("SAICVolkswagenVehicleManagement_Model.EquipmentInfo", b =>
                {
                    b.Property<int>("EquipmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EquipmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipmentState")
                        .HasColumnType("int");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.HasKey("EquipmentID");

                    b.ToTable("EquipmentInfo");
                });

            modelBuilder.Entity("SAICVolkswagenVehicleManagement_Model.GPSPositioningInfo", b =>
                {
                    b.Property<int>("GPSID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Angle")
                        .HasColumnType("float");

                    b.Property<int>("CarID")
                        .HasColumnType("int");

                    b.Property<double>("CurrentMileage")
                        .HasColumnType("float");

                    b.Property<string>("GPSCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPSDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPSSerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GPSState")
                        .HasColumnType("int");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LocationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalMileage")
                        .HasColumnType("float");

                    b.HasKey("GPSID");

                    b.ToTable("GPSPositioningInfo");
                });

            modelBuilder.Entity("SAICVolkswagenVehicleManagement_Model.Permission", b =>
                {
                    b.Property<int>("PermissionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("PermissionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermissionUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpID")
                        .HasColumnType("int");

                    b.HasKey("PermissionID");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("SAICVolkswagenVehicleManagement_Model.R_UserInfo", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Department_ID")
                        .HasColumnType("int");

                    b.Property<string>("UserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserPassWord")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserID");

                    b.ToTable("R_UserInfo");
                });

            modelBuilder.Entity("SAICVolkswagenVehicleManagement_Model.RoleInfo", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("RoleInfo");
                });

            modelBuilder.Entity("SAICVolkswagenVehicleManagement_Model.Role_Permission", b =>
                {
                    b.Property<int>("ConnectionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Permission")
                        .HasColumnType("int");

                    b.Property<int>("PermissionID")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("ConnectionID");

                    b.ToTable("Role_Permission");
                });

            modelBuilder.Entity("SAICVolkswagenVehicleManagement_Model.TestSiteAndCar", b =>
                {
                    b.Property<int>("TestSiteAndCarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CarID")
                        .HasColumnType("int");

                    b.Property<int>("TestSiteID")
                        .HasColumnType("int");

                    b.HasKey("TestSiteAndCarID");

                    b.ToTable("TestSiteAndCar");
                });

            modelBuilder.Entity("SAICVolkswagenVehicleManagement_Model.TestSiteInfo", b =>
                {
                    b.Property<int>("TestSiteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddressDetails")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AddressIdentificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AddressState")
                        .HasColumnType("int");

                    b.Property<int>("AddressType")
                        .HasColumnType("int");

                    b.Property<string>("Contacts")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactsPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<string>("SpotSpeed")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StartintPoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminationPoint")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TestSiteID");

                    b.ToTable("TestSiteInfo");
                });

            modelBuilder.Entity("SAICVolkswagenVehicleManagement_Model.User_Role", b =>
                {
                    b.Property<int>("ConnectionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ConnectionID");

                    b.ToTable("User_Role");
                });
#pragma warning restore 612, 618
        }
    }
}
